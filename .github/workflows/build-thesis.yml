name: Build Thesis PDF
on:
  push:
    branches:
      - master
jobs:
  build-pdf:
    runs-on: ubuntu-latest
    outputs:
      pdf_exists: ${{ steps.check-pdf.outputs.pdf_exists }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Compile LaTeX Document
        uses: xu-cheng/latex-action@v3
        with:
          working_directory: .
          root_file: thesis.tex
          latexmk_shell_escape: true
          extra_system_packages: |
            py3-pygments
            biber
          args: -pdf -latexoption=-interaction=nonstopmode -latexoption=-file-line-error -f
          continue_on_error: true
      - name: Check if PDF was created
        id: check-pdf
        run: |
          if [ -f "thesis.pdf" ]; then
            echo "pdf_exists=true" >> $GITHUB_OUTPUT
            echo "PDF file exists and was created successfully"
            echo "PDF size: $(stat -c%s thesis.pdf) bytes"
          else
            echo "pdf_exists=false" >> $GITHUB_OUTPUT
            echo "PDF file was not created"
          fi
      - name: Upload PDF Artifact
        if: steps.check-pdf.outputs.pdf_exists == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: thesis-pdf
          path: thesis.pdf
          retention-days: 30
      - name: Upload LaTeX Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: latex-logs
          path: |
            thesis.log
            thesis.blg
            thesis.fls
            thesis.fdb_latexmk
            thesis.bcf
            thesis.run.xml
          retention-days: 30
  release:
    needs: build-pdf
    runs-on: ubuntu-latest
    permissions:
      contents: write
    # Run release job if PDF was created, regardless of build success/failure
    if: needs.build-pdf.outputs.pdf_exists == 'true'
    steps:
      - name: Download PDF Artifact
        uses: actions/download-artifact@v4
        with:
          name: thesis-pdf
          path: .
      - name: Create or Update Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          name: Latest Thesis Build
          body: |
            Automatically generated PDF from commit `${{ github.sha }}`
            Built on: ${{ github.event.created_at }}
            Commit message: ${{ github.event.head_commit.message }}
            
            This PDF was automatically generated by GitHub Actions.
          files: thesis.pdf
          overwrite: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
